{"version":3,"sources":["components/AppContext.js","components/News.js","constants/routes.js","utils/http.js","constants/api.js","services/hackerNews.js","components/Home.js","constants/message.js","components/Login.js","components/NavBar.js","components/Header.js","components/CommentsChilds.js","components/Comments.js","components/NotFound.js","constants/localStorage.js","constants/sessionStorage.js","components/AppRouter.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","errors","success","isAuthenticated","handleLogin","handleSignup","handleLogout","News","news","this","props","context","react_default","a","createElement","Fragment","className","onClick","window","location","href","url","by","title","Date","time","toLocaleString","Link","to","pathname","concat","id","state","data","kids","length","Redirect","PureComponent","contextType","porpTypes","PropTypes","object","isRequired","bool","routes","LOGINSIGNUP","NEWNEWSSTORIES","COMMENTS","TOPNEWSSTORIES","BESTNEWSSTORIES","http","axios","create","baseURL","process","api","NEWSTORIES","TOPSTORIES","BESTSTORIES","getNews","_x","_x2","_x3","_getNews","apply","arguments","_callee","newsType","newsId","commentId","filteredNewsType","apiData","_apiData","newsData","regenerator_default","wrap","_context","prev","next","matchNewsTypeToUrl","get","sent","abrupt","API","Promise","resolve","stop","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchNewsStories","asyncToGenerator","mark","newsStoriesIds","maxNewsItems","checkRoutes","setState","isLoading","services","loadNewsFromIds","_this$state","newsPerPage","currentPage","newsStories","initialRenderState","i","then","_ref2","toConsumableArray","catch","error","ROUTES","handleUpdate","pageChange","goToNextPage","goToPreviousPage","_this2","_this$state2","map","value","index","key","components_News","disabled","LOGIN_ERRORS","SIGNUP_ERROR","EMPTY_INPUT_FIELDS","PASSWORD_MISMATCH_ERROR","USERNAME_MISMATCH_ERROR","NOT_FOUND_ERRORS","ERRORS","COMMENTS_NOT_FOUND","CHILD_COMMENTS_NOT_FOUND","SIGNUP_SUCCESS","SIGNUP_SUCCESS_MESSAGE","Login","handleInputChange","inputEvent","defineProperty","target","name","handleFormDataSubmit","event","preventDefault","userName","password","loginData","stateErrors","_this$context","type","onChange","htmlFor","Component","navigationLinks","NavBar","navigationLink","NavLink","exact","activeClassName","Header","CommentsChilds","componentDidMount","kidsNews","_ref","objectSpread","commentsChild","text","components_Comments","Redirect_default","Comments","comments","kidsNewsId","history","components_CommentsChilds","react_router_dom_Redirect_default","NotFound","LOGIN_CREDENTIALS","IS_AUTHENTICATED","AppRouter","loginCredentials","JSON","parse","localStorage","getItem","sessionStorage","setItem","stringify","Provider","BrowserRouter","basename","components_Header","components_NavBar","Switch","Route","path","component","components_Login","components_Home","components_NotFound","Boolean","hostname","match","ReactDOM","render","components_AppRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a788c4a.chunk.js","sourcesContent":["import React from 'react';\n\n/**\n * Context data used in allover the app.\n */\nexport const AppContext = React.createContext({\n  errors: '',\n  success: '',\n  isAuthenticated: false,\n  /** Handles Login in the app.*/\n  handleLogin() {},\n  /** Handles Signup in the app.*/\n  handleSignup() {},\n  /** Haneles logout in app.*/\n  handleLogout() {}\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { AppContext } from './AppContext';\n\n/**\n * @class News\n * @extends {Component}\n */\nclass News extends React.PureComponent {\n  static contextType = AppContext;\n  /**\n   * @memberof News\n   * @returns {number}\n   */\n  render() {\n    const { news } = this.props;\n    const { isAuthenticated } = this.context;\n\n    return (\n      <React.Fragment>\n        {isAuthenticated ? (\n          <React.Fragment>\n            {news ? (\n              <li>\n                <div className=\"card each-list\">\n                  <div\n                    className=\"news-content\"\n                    onClick={() => (window.location.href = news.url)}\n                  >\n                    <div className=\"newsAuthor\">\n                      author:<span className=\"authorName\"> {news.by}</span>\n                    </div>\n                    <span className=\"newsSpan\">{news.title}</span>\n                    <span className=\"created-date \">\n                      createdAt: {new Date(news.time).toLocaleString()}\n                    </span>\n                  </div>\n                  <div className=\"link-to-comments clearfix\">\n                    <Link\n                      to={{\n                        pathname: `/news/${news.id}`,\n                        state: {\n                          data: this.props,\n                          isAuthenticated: isAuthenticated\n                        }\n                      }}\n                    >\n                      comments\n                      {news.kids ? (\n                        <span className=\"new badge blue\">\n                          {news.kids.length}\n                        </span>\n                      ) : (\n                        <span className=\"new badge blue\">0</span>\n                      )}\n                    </Link>\n                  </div>\n                </div>\n              </li>\n            ) : (\n              <div className=\"progress progress-bar\">\n                <div className=\"indeterminate\" />\n              </div>\n            )}\n          </React.Fragment>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nNews.porpTypes = {\n  news: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nexport default News;\n","export default {\n  LOGINSIGNUP: '/login',\n  NEWNEWSSTORIES: '/',\n  COMMENTS: '/news/:id',\n  TOPNEWSSTORIES: '/topstories',\n  BESTNEWSSTORIES: '/beststories'\n};\n","import axios from 'axios';\n\n/**\n * Base url for our api.\n */\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_HACKERNEWS_API\n});\n\nexport default http;\n","export default {\n  COMMENTS: '/item',\n  NEWSTORIES: '/newstories.json',\n  TOPSTORIES: '/topstories.json',\n  BESTSTORIES: '/beststories.json'\n};\n","import http from '../utils/http';\nimport API from '../constants/api';\n\n/**\n * @param {String} newsType\n * @param {Number} newsId\n * @param {Number} commentId\n * Fetch news data from the api.\n */\nexport async function getNews(newsType, newsId, commentId) {\n  const filteredNewsType = matchNewsTypeToUrl(newsType);\n\n  if (!newsId && !commentId) {\n    const apiData = await http.get(filteredNewsType);\n\n    return apiData.data;\n  } else if (newsId && !commentId) {\n    const apiData = await http.get(`/item/${newsId}.json`);\n\n    return apiData;\n  } else if (!newsId && commentId) {\n    const newsData = await http.get(`${API.COMMENTS}/${commentId}.json`);\n\n    return Promise.resolve(newsData);\n  }\n}\n\n/**\n * @param {String}newsType\n * @returns {number} News type.\n */\nconst matchNewsTypeToUrl = newsType => {\n  switch (newsType) {\n    case 'newnews':\n      return API.NEWSTORIES;\n    case 'topnews':\n      return API.TOPSTORIES;\n    case 'bestnews':\n      return API.BESTSTORIES;\n    case 'comments':\n      return API.COMMENTS;\n    default:\n      return API.NEWSTORIES;\n  }\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport News from './News';\nimport ROUTES from '../constants/routes';\nimport { AppContext } from './AppContext';\nimport * as services from '../services/hackerNews';\n\n/**\n * @class Home\n * @extends {React.PureComponent}\n */\nclass Home extends React.PureComponent {\n  static contextType = AppContext;\n  /**\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newsType: '',\n      currentPage: 0,\n      newsStories: [],\n      goToNextPage: 1,\n      maxNewsItems: 0,\n      newsPerPage: 10,\n      isLoading: false,\n      newsStoriesIds: [],\n      goToPreviousPage: -1\n    };\n  }\n\n  /**\n   * @memberof Home\n   * Calls fetchNewsStories to fetch news data from api.\n   */\n  componentDidMount() {\n    this.fetchNewsStories();\n  }\n\n  /**\n   * @memberof Home\n   * Fetch news from api.\n   * Pass the data from api to function setDataToState.\n   */\n  fetchNewsStories = async () => {\n    const newsType = await this.checkRoutes();\n\n    this.setState({ newsType, isLoading: true });\n\n    if (this.state.isLoading) {\n      const newsStoriesIds = await services.getNews(this.state.newsType);\n      const maxNewsItems = newsStoriesIds.length / 10;\n\n      this.setState({ newsStoriesIds, maxNewsItems });\n      this.loadNewsFromIds();\n    }\n  };\n\n  /**\n   * Loads news headlines using the ids that have been fetched in first api call.\n   * Sets the news data to array newsStories in state.\n   *\n   * @memberof Home\n   */\n  loadNewsFromIds = () => {\n    const { newsPerPage, currentPage } = this.state;\n\n    this.setState({\n      newsStories: []\n    });\n    const initialRenderState = currentPage * newsPerPage;\n\n    for (\n      let i = initialRenderState;\n      i < initialRenderState + newsPerPage;\n      i++\n    ) {\n      const newsData = services.getNews(\n        this.state.newsType,\n        this.state.newsStoriesIds[i]\n      );\n\n      newsData\n        .then(({ data }) =>\n          this.setState({\n            newsStories: [...this.state.newsStories, data]\n          })\n        )\n        .catch(error => error);\n    }\n  };\n\n  /**\n   * @memberof Home\n   * @returns {string} News type .\n   * Checks news type based on the incoming routes.\n   */\n  checkRoutes = () => {\n    const { pathname } = this.props.location;\n\n    switch (pathname) {\n      case ROUTES.NEWNEWSSTORIES:\n        return 'newnews';\n      case ROUTES.TOPNEWSSTORIES:\n        return 'topnews';\n      case ROUTES.BESTNEWSSTORIES:\n        return 'bestnews';\n      default:\n        return 'newnews';\n    }\n  };\n\n  /**\n   * @memberof Home\n   * Stops fetching news data.\n   */\n  componentWillUnmount() {\n    this.setState({ isLoading: false });\n  }\n\n  /**\n   * @memberof Home\n   * @param {Number} pageChange\n   */\n  handleUpdate = pageChange => {\n    this.setState({ currentPage: this.state.currentPage + pageChange });\n    this.loadNewsFromIds();\n  };\n\n  /**\n   * @memberof Home\n   * @returns {number} Jsx to display news.\n   */\n  render() {\n    const {\n      maxNewsItems,\n      newsStories,\n      goToNextPage,\n      goToPreviousPage,\n      currentPage\n    } = this.state;\n    const { isAuthenticated } = this.context;\n\n    return (\n      <React.Fragment>\n        {isAuthenticated ? (\n          <React.Fragment>\n            <div className=\"container local-container list-container\">\n              <ul>\n                {newsStories.map((value, index) => (\n                  <div key={index}>\n                    <News\n                      news={value}\n                      index={index}\n                      newsType={this.state.newsType}\n                    />\n                  </div>\n                ))}\n              </ul>\n            </div>\n            <div className=\"news-pagination\">\n              <button\n                disabled={currentPage === 0 || currentPage < 0 ? true : false}\n                onClick={() => this.handleUpdate(goToPreviousPage)}\n                className=\"btn-floating btn-large waves-effect waves-light previous-page\"\n              >\n                <i className=\"fas fa-chevron-left\" />\n              </button>\n              <button\n                disabled={currentPage >= maxNewsItems - 1 ? true : false}\n                onClick={() => this.handleUpdate(goToNextPage)}\n                className=\"btn-floating btn-large waves-effect waves-light next-page\"\n              >\n                <i className=\"fas fa-chevron-right\" />\n              </button>\n            </div>\n          </React.Fragment>\n        ) : (\n          <Redirect to={ROUTES.LOGINSIGNUP} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","export const LOGIN_ERRORS = {\n  SIGNUP_ERROR: 'Please sign-up to login',\n  EMPTY_INPUT_FIELDS: 'Check your inputs.',\n  PASSWORD_MISMATCH_ERROR: 'Please check your password.',\n  USERNAME_MISMATCH_ERROR: 'Please check your user name.'\n};\n\nexport const NOT_FOUND_ERRORS = {\n  ROUTE_NOT_FOUND: '404 not found'\n};\n\nexport const ERRORS = {\n  COMMENTS_NOT_FOUND: 'no comments to display',\n  CHILD_COMMENTS_NOT_FOUND: 'no commentsChilds to display'\n};\n\nexport const SIGNUP_SUCCESS = {\n  SIGNUP_SUCCESS_MESSAGE: 'You have sign up now you can login.'\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport ROUTES from '../constants/routes';\nimport { AppContext } from './AppContext';\nimport { LOGIN_ERRORS } from '../constants/message';\n\n/**\n * @class Login\n * @extends {React.Component}\n * @param {Object} data\n * @param {Object} event\n */\nclass Login extends React.Component {\n  static contextType = AppContext;\n  /**\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = { errors: '', password: '', userName: '' };\n  }\n\n  /**\n   * @memberof Login\n   * @param {Object} inputEvent\n   * Handles value change in input fields.\n   */\n  handleInputChange = inputEvent => {\n    this.setState({\n      [inputEvent.target.name]: inputEvent.target.value\n    });\n  };\n\n  /**\n   * @memberof Login\n   * @param {Object} event\n   * Handles submit event for both login and signup button.\n   */\n  handleFormDataSubmit = event => {\n    event.preventDefault();\n    const { userName, password } = this.state;\n\n    if (userName && password) {\n      const loginData = { userName: userName, password: password };\n\n      event.target.name === 'signup'\n        ? this.context.handleSignup(loginData)\n        : this.context.handleLogin(loginData);\n    } else {\n      this.setState({ errors: LOGIN_ERRORS.EMPTY_INPUT_FIELDS });\n    }\n  };\n\n  /**\n   * @memberof Login\n   * @returns {number} Jsx to disply login-signup form.\n   */\n  render() {\n    const stateErrors = this.state.errors;\n    const { isAuthenticated, errors, success } = this.context;\n\n    return (\n      <React.Fragment>\n        {isAuthenticated ? (\n          <Redirect to={ROUTES.NEWNEWSSTORIES} />\n        ) : (\n          <div className=\"conteiner local-container\">\n            <div className=\"row form-row\">\n              <div className=\"login-header\">Login</div>\n              <form className=\"col s12 form-holder\">\n                <div className=\"row\">\n                  <div className=\"input-field col s12\">\n                    <i className=\"material-icons prefix\">account_circle</i>\n                    <input\n                      id=\"icon_prefix\"\n                      type=\"text\"\n                      className=\"validate\"\n                      name=\"userName\"\n                      onChange={this.handleInputChange}\n                    />\n                    <label htmlFor=\"icon_prefix\">User Name</label>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <i className=\"material-icons prefix\">security</i>\n                    <input\n                      id=\"icon_telephone\"\n                      type=\"password\"\n                      className=\"validate\"\n                      name=\"password\"\n                      onChange={this.handleInputChange}\n                    />\n                    <label htmlFor=\"icon_telephone\">Password</label>\n                  </div>\n                </div>\n                <div className=\"btn-container\">\n                  <input\n                    className=\"btn waves-effect waves-light login-page-buttons\"\n                    type=\"button\"\n                    name=\"login\"\n                    value=\"login\"\n                    onClick={this.handleFormDataSubmit}\n                  />\n                  <input\n                    className=\"btn waves-effect waves-light login-page-buttons\"\n                    type=\"button\"\n                    name=\"signup\"\n                    value=\"signup\"\n                    onClick={this.handleFormDataSubmit}\n                  />\n                </div>\n              </form>\n              <div className=\"invalid errors\">\n                {stateErrors || errors || success}\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ROUTES from '../constants/routes';\n\nconst navigationLinks = [\n  {\n    to: ROUTES.NEWNEWSSTORIES,\n    name: 'New Stories'\n  },\n  {\n    to: ROUTES.BESTNEWSSTORIES,\n    name: 'Best Stories'\n  },\n  {\n    to: ROUTES.TOPNEWSSTORIES,\n    name: 'Top Stories'\n  }\n];\n\n/**\n * @memberof Navbar\n * @returns {number} Nav component.\n */\nconst NavBar = () => (\n  <div className=\"container local-container\">\n    <nav className=\"nav-extended\">\n      <div className=\"nav-content\">\n        <ul className=\"tabs tabs-transparent\">\n          {navigationLinks.map(navigationLink => (\n            <NavLink\n              exact\n              activeClassName=\"activeNavBar\"\n              className=\"tab nav-tabs\"\n              to={navigationLink.to}\n              key={navigationLink.to}\n            >\n              {navigationLink.name}\n            </NavLink>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  </div>\n);\n\nexport default NavBar;\n","import React from 'react';\n\nimport { AppContext } from './AppContext';\n\n/**\n * @returns {number} Header title.\n */\nclass Header extends React.Component {\n  static contextType = AppContext;\n\n  /**\n   * @memberof Header\n   * @returns {string} Header.\n   */\n  render() {\n    const { handleLogout } = this.context;\n\n    return (\n      <div className=\"container app-header local-container clearfix\">\n        <span className=\"header\">Hacker News</span>\n        <span className=\"logout\" onClick={handleLogout}>\n          <i className=\"fas fa-sign-out-alt\" />\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comments from './Comments';\nimport { AppContext } from './AppContext';\nimport Redirect from 'react-router/Redirect';\nimport { ERRORS } from '../constants/message';\nimport * as services from '../services/hackerNews';\n\n/**\n * @class Comments\n * @augments {Component}\n */\nclass CommentsChilds extends React.Component {\n  static contextType = AppContext;\n  /**\n   * Creates an instance of Comments.\n   *\n   * @param {*} props\n   * @memberof Comments\n   */\n  constructor(props) {\n    super(props);\n    this.state = { commentsChild: null, newsType: 'comments' };\n  }\n\n  /**\n   * @memberof Comments\n   * Recursively calls api for each comments childrens.\n   * Sets those childrens in state.\n   */\n  componentDidMount = () => {\n    const kidsNews = this.props.data;\n\n    if (kidsNews) {\n      services\n        .getNews(this.state.newsType, kidsNews)\n        .then(({ data }) =>\n          this.setState({\n            ...this.state.commentsChild,\n            commentsChild: data\n          })\n        )\n        .catch(error => error);\n    } else {\n      this.setState({ errors: ERRORS.CHILD_COMMENTS_NOT_FOUND });\n    }\n  };\n\n  /**\n   * @returns {jsx} Jsx to display comments.\n   */\n  render() {\n    const { commentsChild } = this.state;\n    const { isAuthenticated } = this.context;\n\n    return (\n      <React.Fragment>\n        {isAuthenticated ? (\n          commentsChild ? (\n            <div>\n              <li className=\"comment-list\" key={commentsChild.id}>\n                <div className=\"newsAuthor\">\n                  author:<span className=\"authorName\"> {commentsChild.by}</span>\n                </div>\n                <span className=\"newsSpan\">{commentsChild.text}</span>\n                <span className=\"created-date \">\n                  createdAt: {new Date(commentsChild.time).toLocaleString()}\n                </span>\n                <div className=\"child-comment\">\n                  <Comments data={commentsChild.kids} />\n                </div>\n              </li>\n            </div>\n          ) : (\n            <div className=\"loader\">\n              <div className=\"preloader-wrapper active\">\n                <div className=\"spinner-layer spinner-red-only\">\n                  <div className=\"circle-clipper left\">\n                    <div className=\"circle\" />\n                  </div>\n                  <div className=\"gap-patch\">\n                    <div className=\"circle\" />\n                  </div>\n                  <div className=\"circle-clipper right\">\n                    <div className=\"circle\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nCommentsChilds.porpTypes = {\n  commentsChild: PropTypes.object.isRequired\n};\n\nexport default CommentsChilds;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AppContext } from './AppContext';\nimport { ERRORS } from '../constants/message';\nimport CommentsChilds from './CommentsChilds';\nimport Redirect from 'react-router-dom/Redirect';\n\n/**\n * @class Comments\n * @augments {Component}\n */\nclass Comments extends React.Component {\n  static contextType = AppContext;\n  /**\n   * Creates an instance of Comments.\n   *\n   * @param {*} props\n   * @memberof Comments\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: '',\n      comments: [],\n      newsType: 'comments'\n    };\n  }\n\n  /**\n   * @returns {number} Comments.\n   */\n  render() {\n    const { isAuthenticated } = this.context;\n    const kidsNewsId = this.props.history\n      ? this.props.history.location.state.data.news.kids\n      : this.props.data;\n\n    return (\n      <React.Fragment>\n        {isAuthenticated ? (\n          <div className=\"container local-container list-container\">\n            {kidsNewsId ? (\n              <ul>\n                {kidsNewsId.map(data => (\n                  <CommentsChilds data={data} key={data.id} />\n                ))}\n              </ul>\n            ) : (\n              <div>{ERRORS.COMMENTS_NOT_FOUND}</div>\n            )}\n          </div>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nComments.porpTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Comments;\n","import React from 'react';\n\nimport { NOT_FOUND_ERRORS } from '../constants/message';\n\n/**\n * @memberof NotFound\n * @returns {number} Not found errors.\n */\nconst NotFound = () => <div>{NOT_FOUND_ERRORS.ROUTE_NOT_FOUND}</div>;\n\nexport default NotFound;\n","export const LOGIN_CREDENTIALS = 'loginCredentials';\n","export const IS_AUTHENTICATED = 'isAuthenticated';\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './Home';\nimport Login from './Login';\nimport NavBar from './NavBar';\nimport Header from './Header';\nimport '../assets/css/App.css';\nimport Comments from './Comments';\nimport NotFound from './NotFound';\nimport ROUTES from '../constants/routes';\nimport { AppContext } from './AppContext';\nimport { LOGIN_ERRORS } from '../constants/message';\nimport { SIGNUP_SUCCESS } from '../constants/message';\nimport { LOGIN_CREDENTIALS } from '../constants/localStorage';\nimport { IS_AUTHENTICATED } from '../constants/sessionStorage';\n\n/**\n * @class AppRouter\n * @augments {React.Component}\n */\nclass AppRouter extends React.Component {\n  /**\n   * Creates an instance of AppRouter.\n   *\n   * @param {any} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: '',\n      success: '',\n      isAuthenticated: false\n    };\n  }\n\n  /**\n   * @param {*} props Data from parent component.\n   * @param {*} state Current state of the component.\n   * @returns {number} The sum of the two numbers.\n   */\n  static getDerivedStateFromProps(props, state) {\n    return {\n      ...state,\n      isAuthenticated: sessionStorage.getItem(IS_AUTHENTICATED) === 'true'\n    };\n  }\n\n  /**\n   * @param {Object} loginData Data from Login component.\n   * @returns {boolean} Boolean that indicates either logged in or not.\n   */\n  handleLogin = loginData => {\n    const loginCredentials = JSON.parse(\n      localStorage.getItem(LOGIN_CREDENTIALS)\n    );\n\n    if (!loginCredentials) {\n      this.setState({ errors: LOGIN_ERRORS.SIGNUP_ERROR });\n    } else {\n      if (loginCredentials.userName !== loginData.userName) {\n        this.setState({ errors: LOGIN_ERRORS.USERNAME_MISMATCH_ERROR });\n      } else if (loginCredentials.password !== loginData.password) {\n        this.setState({\n          errors: LOGIN_ERRORS.PASSWORD_MISMATCH_ERROR\n        });\n      } else if (\n        loginCredentials.userName === loginData.userName &&\n        loginCredentials.password === loginData.password\n      ) {\n        this.setState({ isAuthenticated: true });\n        sessionStorage.setItem(IS_AUTHENTICATED, true);\n\n        return true;\n      }\n    }\n  };\n\n  /**\n   * @param {Object} loginData Data from Login component.\n   * @returns {boolean} Boolean that indicates either signin or not.\n   */\n  handleSignup = loginData => {\n    if (loginData) {\n      localStorage.setItem(LOGIN_CREDENTIALS, JSON.stringify(loginData));\n      this.setState({\n        success: SIGNUP_SUCCESS.SIGNUP_SUCCESS_MESSAGE\n      });\n\n      return true;\n    }\n  };\n\n  /**\n   * Handles logout function in app.\n   */\n  handleLogout = () => {\n    this.setState({ isAuthenticated: false });\n    sessionStorage.setItem('isAuthenticated', false);\n  };\n\n  /**\n   * @returns {boolean} React Router.\n   */\n  render() {\n    const { isAuthenticated, errors, success } = this.state;\n\n    return (\n      <AppContext.Provider\n        value={{\n          errors: errors,\n          success: success,\n          isAuthenticated: isAuthenticated,\n          handleLogin: this.handleLogin,\n          handleSignup: this.handleSignup,\n          handleLogout: this.handleLogout\n        }}\n      >\n        <Router basename={'/hackernews'}>\n          <div>\n            {isAuthenticated && (\n              <div className=\"header-container\">\n                <Header />\n                <NavBar />\n              </div>\n            )}\n            <Switch>\n              <Route\n                path={ROUTES.LOGINSIGNUP}\n                exact\n                component={props => <Login {...props} />}\n              />\n              <Route\n                path={ROUTES.NEWNEWSSTORIES}\n                exact\n                component={props => <Home {...props} />}\n              />\n              <Route\n                path={ROUTES.TOPNEWSSTORIES}\n                exact\n                component={props => <Home {...props} />}\n              />\n              <Route\n                path={ROUTES.BESTNEWSSTORIES}\n                exact\n                component={props => <Home {...props} />}\n              />\n              <Route\n                path={ROUTES.COMMENTS}\n                exact\n                component={props => <Comments {...props} />}\n              />\n              <Route component={props => <NotFound {...props} />} />\n            </Switch>\n          </div>\n        </Router>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './assets/css/index.css';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './components/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}